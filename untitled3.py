# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EsNWoJtd5tCTOauVTl2yblAOGZ_nbVxb
"""

import pytest
from math import gcd

def sum_multiples_of_3_or_5_below_1000(n):
    total = 0
    for i in range(1, n):
        if i % 3 == 0 or i % 5 == 0:
            total += i
    return total

def sum_even_fibonacci(limit):
    a, b = 1, 2
    total = 0
    while a <= limit:
        if a % 2 == 0:
            total += a
        a, b = b, a + b
    return total

def largest_prime_factor(n):
    factor = 2
    largest_prime = 0
    while factor * factor <= n:
        if n % factor == 0:
            n //= factor
            largest_prime = factor
        else:
            factor += 1
    if n > largest_prime:
        largest_prime = n
    return largest_prime

def is_palindrome(n):
    return str(n) == str(n)[::-1]

def largest_palindrome_product():
    max_palindrome = 0
    for i in range(100, 1000):
        for j in range(100, 1000):
            product = i * j
            if is_palindrome(product) and product > max_palindrome:
                max_palindrome = product
    return max_palindrome

def lcm(a, b):
    return (a * b) // gcd(a, b)

def smallest_multiple(n):
    result = 1
    for i in range(2, n + 1):
        result = lcm(result, i)
    return result

def test_problem_1_basic():
    assert sum_multiples_of_3_or_5_below_1000(10) == 23, "La función debería retornar 23 para el límite 10"

def test_problem_2_basic():
    assert sum_even_fibonacci(10) == 10, "La función debería retornar 10 como la suma de los primeros términos pares"

def test_problem_3_basic():
    assert largest_prime_factor(13195) == 29, "La función debería retornar 29 como el mayor factor primo de 13195"

def test_problem_4_is_palindrome():
    result = largest_palindrome_product()
    assert str(result) == str(result)[::-1], "El resultado debería ser un palíndromo"

def test_problem_5_basic():
    assert smallest_multiple(10) == 2520, "La función debería retornar 2520 como el número divisible por todos los números del 1 al 10"